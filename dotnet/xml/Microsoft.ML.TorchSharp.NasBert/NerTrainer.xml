<Type Name="NerTrainer" FullName="Microsoft.ML.TorchSharp.NasBert.NerTrainer">
  <TypeSignature Language="C#" Value="public class NerTrainer : Microsoft.ML.TorchSharp.NasBert.NasBertTrainer&lt;Microsoft.ML.Data.VBuffer&lt;uint&gt;,Microsoft.ML.Data.VBuffer&lt;long&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NerTrainer extends Microsoft.ML.TorchSharp.NasBert.NasBertTrainer`2&lt;valuetype Microsoft.ML.Data.VBuffer`1&lt;unsigned int32&gt;, valuetype Microsoft.ML.Data.VBuffer`1&lt;int64&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.NasBert.NerTrainer" />
  <TypeSignature Language="VB.NET" Value="Public Class NerTrainer&#xA;Inherits NasBertTrainer(Of VBuffer(Of UInteger), VBuffer(Of Long))" />
  <TypeSignature Language="F#" Value="type NerTrainer = class&#xA;    inherit NasBertTrainer&lt;VBuffer&lt;uint32&gt;, VBuffer&lt;int64&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.TorchSharp.NasBert.NasBertTrainer&lt;Microsoft.ML.Data.VBuffer&lt;System.UInt32&gt;,Microsoft.ML.Data.VBuffer&lt;System.Int64&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TLabelCol">Microsoft.ML.Data.VBuffer&lt;System.UInt32&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTargetsCol">Microsoft.ML.Data.VBuffer&lt;System.Int64&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1" /> for training a Deep Neural Network(DNN) to classify text.
             </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
             To create this trainer, use [NER](xref:Microsoft.ML.TorchSharpCatalog.NamedEntityRecognition(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,Int32,Int32,Int32,Microsoft.ML.TorchSharp.NasBert.BertArchitecture,Microsoft.ML.IDataView)).
            
             ### Input and Output Columns
             The input label column data must be a Vector of [string](xref:Microsoft.ML.Data.TextDataViewType) type and the sentence columns must be of type<xref:Microsoft.ML.Data.TextDataViewType>.
            
             This trainer outputs the following columns:
            
             | Output Column Name | Column Type | Description|
             | -- | -- | -- |
             | `PredictedLabel` | Vector of [key](xref:Microsoft.ML.Data.KeyDataViewType) type | The predicted label's index. If its value is i, the actual label would be the i-th category in the key-valued input label type. |
             |  |  |
             | -- | -- |
             | Machine learning task | Multiclass classification |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.TorchSharp and libtorch-cpu or libtorch-cuda-11.3 or any of the OS specific variants. |
             | Exportable to ONNX | No |
            
             ### Training Algorithm Details
             Trains a Deep Neural Network(DNN) by leveraging an existing pre-trained NAS-BERT roBERTa model for the purpose of named entity recognition.
             ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
