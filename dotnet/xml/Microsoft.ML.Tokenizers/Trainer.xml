<Type Name="Trainer" FullName="Microsoft.ML.Tokenizers.Trainer">
  <TypeSignature Language="C#" Value="public abstract class Trainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Trainer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.Tokenizers.Trainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Trainer" />
  <TypeSignature Language="F#" Value="type Trainer = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A `Trainer` has the responsibility to train a model. We feed it with lines/sentences
            and then it can train the given `Model`.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Trainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Trainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Feed">
      <MemberSignature Language="C#" Value="public abstract void Feed (System.Collections.Generic.IEnumerable&lt;string&gt; sequences, Func&lt;string,System.Collections.Generic.IEnumerable&lt;string&gt;&gt; process);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Feed(class System.Collections.Generic.IEnumerable`1&lt;string&gt; sequences, class System.Func`2&lt;string, class System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt; process) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Trainer.Feed(System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.Collections.Generic.IEnumerable{System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Feed (sequences As IEnumerable(Of String), process As Func(Of String, IEnumerable(Of String)))" />
      <MemberSignature Language="F#" Value="abstract member Feed : seq&lt;string&gt; * Func&lt;string, seq&lt;string&gt;&gt; -&gt; unit" Usage="trainer.Feed (sequences, process)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequences" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="process" Type="System.Func&lt;System.String,System.Collections.Generic.IEnumerable&lt;System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="sequences">The list of sequences to feed the trainer.</param>
        <param name="process">Optional process callback for reporting the training progress update.</param>
        <summary>
            Process the input sequences and feed the result to the model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Progress">
      <MemberSignature Language="C#" Value="public Microsoft.ML.Tokenizers.ReportProgress? Progress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.Tokenizers.ReportProgress Progress" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.Tokenizers.Trainer.Progress" />
      <MemberSignature Language="VB.NET" Value="Public Property Progress As ReportProgress" />
      <MemberSignature Language="F#" Value="member this.Progress : Microsoft.ML.Tokenizers.ReportProgress with get, set" Usage="Microsoft.ML.Tokenizers.Trainer.Progress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.Tokenizers.ReportProgress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set when need to report the progress during the training.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Train">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.AddedToken&gt;? Train (Microsoft.ML.Tokenizers.Model model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype Microsoft.ML.Tokenizers.AddedToken&gt; Train(class Microsoft.ML.Tokenizers.Model model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.Tokenizers.Trainer.Train(Microsoft.ML.Tokenizers.Model)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Train (model As Model) As IReadOnlyList(Of AddedToken)" />
      <MemberSignature Language="F#" Value="abstract member Train : Microsoft.ML.Tokenizers.Model -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.AddedToken&gt;" Usage="trainer.Train model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.Tokenizers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.ML.Tokenizers.AddedToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.ML.Tokenizers.Model" />
      </Parameters>
      <Docs>
        <param name="model">The model to train.</param>
        <summary>
            Perform the actual training and update the input model with the new vocabularies and merges data.
            </summary>
        <returns>Special tokens to be added directly to the tokenizer along with the model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
