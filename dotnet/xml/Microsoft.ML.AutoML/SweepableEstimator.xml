<Type Name="SweepableEstimator" FullName="Microsoft.ML.AutoML.SweepableEstimator">
  <TypeSignature Language="C#" Value="public class SweepableEstimator : Microsoft.ML.AutoML.Estimator, Microsoft.ML.AutoML.ISweepable&lt;Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SweepableEstimator extends Microsoft.ML.AutoML.Estimator implements class Microsoft.ML.AutoML.ISweepable, class Microsoft.ML.AutoML.ISweepable`1&lt;class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.AutoML.SweepableEstimator" />
  <TypeSignature Language="VB.NET" Value="Public Class SweepableEstimator&#xA;Inherits Estimator&#xA;Implements ISweepable(Of IEstimator(Of ITransformer))" />
  <TypeSignature Language="F#" Value="type SweepableEstimator = class&#xA;    inherit Estimator&#xA;    interface ISweepable&lt;IEstimator&lt;ITransformer&gt;&gt;&#xA;    interface ISweepable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ML.AutoML.Estimator</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ML.AutoML.ISweepable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ML.AutoML.ISweepable&lt;Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Microsoft.ML.AutoML.SweepableEstimatorConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Microsoft.ML.AutoML.SweepableEstimatorConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Estimator with search space.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SweepableEstimator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.SweepableEstimator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SweepableEstimator (Func&lt;Microsoft.ML.MLContext,Microsoft.ML.SearchSpace.Parameter,Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;&gt; factory, Microsoft.ML.SearchSpace.SearchSpace ss);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`3&lt;class Microsoft.ML.MLContext, class Microsoft.ML.SearchSpace.Parameter, class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt;&gt; factory, class Microsoft.ML.SearchSpace.SearchSpace ss) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.SweepableEstimator.#ctor(System.Func{Microsoft.ML.MLContext,Microsoft.ML.SearchSpace.Parameter,Microsoft.ML.IEstimator{Microsoft.ML.ITransformer}},Microsoft.ML.SearchSpace.SearchSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (factory As Func(Of MLContext, Parameter, IEstimator(Of ITransformer)), ss As SearchSpace)" />
      <MemberSignature Language="F#" Value="new Microsoft.ML.AutoML.SweepableEstimator : Func&lt;Microsoft.ML.MLContext, Microsoft.ML.SearchSpace.Parameter, Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;&gt; * Microsoft.ML.SearchSpace.SearchSpace -&gt; Microsoft.ML.AutoML.SweepableEstimator" Usage="new Microsoft.ML.AutoML.SweepableEstimator (factory, ss)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;Microsoft.ML.MLContext,Microsoft.ML.SearchSpace.Parameter,Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;&gt;" />
        <Parameter Name="ss" Type="Microsoft.ML.SearchSpace.SearchSpace" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <param name="ss">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildFromOption">
      <MemberSignature Language="C#" Value="public virtual Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt; BuildFromOption (Microsoft.ML.MLContext context, Microsoft.ML.SearchSpace.Parameter param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.ML.IEstimator`1&lt;class Microsoft.ML.ITransformer&gt; BuildFromOption(class Microsoft.ML.MLContext context, class Microsoft.ML.SearchSpace.Parameter param) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.AutoML.SweepableEstimator.BuildFromOption(Microsoft.ML.MLContext,Microsoft.ML.SearchSpace.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildFromOption (context As MLContext, param As Parameter) As IEstimator(Of ITransformer)" />
      <MemberSignature Language="F#" Value="abstract member BuildFromOption : Microsoft.ML.MLContext * Microsoft.ML.SearchSpace.Parameter -&gt; Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;&#xA;override this.BuildFromOption : Microsoft.ML.MLContext * Microsoft.ML.SearchSpace.Parameter -&gt; Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;" Usage="sweepableEstimator.BuildFromOption (context, param)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.ML.AutoML.ISweepable`1.BuildFromOption(Microsoft.ML.MLContext,Microsoft.ML.SearchSpace.Parameter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.IEstimator&lt;Microsoft.ML.ITransformer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.ML.MLContext" />
        <Parameter Name="param" Type="Microsoft.ML.SearchSpace.Parameter" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="param">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchSpace">
      <MemberSignature Language="C#" Value="public Microsoft.ML.SearchSpace.SearchSpace SearchSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ML.SearchSpace.SearchSpace SearchSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ML.AutoML.SweepableEstimator.SearchSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchSpace As SearchSpace" />
      <MemberSignature Language="F#" Value="member this.SearchSpace : Microsoft.ML.SearchSpace.SearchSpace with get, set" Usage="Microsoft.ML.AutoML.SweepableEstimator.SearchSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.AutoML</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.SearchSpace.SearchSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
